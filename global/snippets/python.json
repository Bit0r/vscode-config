{
	"Data Science Libraries": {
		"prefix": "import_base",
		"body": [
			"import functools",
			"import json",
			"import os",
			"from pathlib import Path",
			"from pprint import pprint",
			"import sys",
			"from typing import Iterable",
			"",
			"from box import Box, BoxList",
			// "from dotenv import load_dotenv",
			"import einops as ein",
			"from loguru import logger",
			"from matplotlib import pyplot as plt",
			"import numpy as np",
			// "import orjson",
			"import pandas as pd",
			// "from plotnine import *  # noqa",
			"import polars as pl",
			"from pydumpling import catch_any_exception",
			"from rich import progress",
			// "from sklearn import metrics",
			// "import snoop",
			// "import xarray as xr",
			"",
			"catch_any_exception()",
		],
		"description": "Import Basic Data Science Libraries"
	},
	"Jax": {
		"prefix": "import_jax",
		"body": [
			"import jax",
			"from jax import nn as jnn",
			"from jax import numpy as jnp",
			"from jax import random as jrandom",
			"from jax import lax, vmap, pmap",
			"from jaxtyping import *",
			"import equinox as eqx",
			"from equinox import nn",
			"import optax",
			"from torch.utils.data import DataLoader, Dataset",
			//"from torch.utils.tensorboard import SummaryWriter",
		],
		"description": "Import Jax Libraries"
	},
	"Pytorch": {
		"prefix": "import_pytorch",
		"body": [
			//"from aim import Run",
			"import torch",
			"from torch import nn",
			"from torch.nn import functional as F",
			"from torch import optim",
			"from torch.utils.data import DataLoader, Dataset",
			//"from torch.utils.tensorboard import SummaryWriter",
			"from torchvision import datasets, transforms",
			"from torchvision.utils import make_grid",
		]
	},
	"Hugging Face": {
		"prefix": "import_huggingface",
		"body": [
			"from transformers import pipeline, get_scheduler, AutoTokenizer, AutoModelForCausalLM, HfArgumentParser, BitsAndBytesConfig, TrainingArguments, Trainer",
			"from peft import LoraConfig",
			"from trl import DPOTrainer",
			"from datasets import load_dataset",
			"from accelerate import Accelerator, load_checkpoint_in_model",
			"from accelerate.utils import ProjectConfiguration, set_seed",
			"from evaluate import load as eval_load",
		]
	}
}
